<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!--
	Tomato GUI
	Copyright (C) 2006 Jonathan Zarate
	http://www.polarcloud.com/tomato/

	For use with Tomato Firmware only.
	No part of this file may be used without permission.
-->
<svg width="100%" height="100%" version="1.1" xmlns="http://www.w3.org/2000/svg" onload="init(evt)" onmouseout="mOut()">
<style type='text/css'>
* {
	cursor: pointer;
}
path {
	stroke: #000;
	stroke-width: 1px;
	stroke-opacity: 0.3;
}
#info {
	font: 11px sans-serif;
}
#tip-mask {
	fill: #ffffff;
	stroke: #777;
	stroke-width: 1px;
	stroke-opacity: 0.2;
}
#tip-text {
	font: 11px sans-serif;
	font-weight: normal;
}
</style>
<script type='text/ecmascript'><![CDATA[

var vWidth = 310;
var vHeight = 310;

//Toastman Class Labels

var abc = ['Unclassified', 'Service','VOIP/Game','Media','Remote','WWW', 'Mail', 'Messenger','Download','P2P/Bulk','Crawl'];
//	var abc = ['Unclassified', '1)', '2)', '3)', '4)', '5)', '6)','7)','8)','9)','10)'];
//      var abc = ['Unclassified', 'Highest', 'High', 'Medium', 'Low', 'Lowest', 'Class A','Class B','Class C','Class D','Class E'];

var tipInfo = [];
var tipTimer = null;
var tipLastN = null;
var ready = 0;

function init(evt)
{
	var e, i, l, s;

    if (typeof(svgDocument) == 'undefined') svgDocument = evt.target.ownerDocument;

	e = document.getElementsByTagName('path');
	for (i = 0; i < 11; ++i) {
		l = document.getElementById('lg' + i);
		l.setAttribute('x1', '0%');
		l.setAttribute('x2', '100%');
		l.setAttribute('y1', '0%');
		l.setAttribute('y2', '100%');

		s = l.getElementsByTagName('stop');
		s.item(0).setAttribute('offset', '0');
		s.item(0).setAttribute('stop-opacity', '0.7');
		s.item(0).setAttribute('stop-color', '#' + top.colors[i]);
		s.item(1).setAttribute('offset', '100%');
		s.item(1).setAttribute('stop-opacity', '1');
		s.item(1).setAttribute('stop-color', '#' + top.colors[i]);

		e.item(i).setAttribute('fill', 'url(#lg' + i + ')');
	}

	info = document.getElementById('info');
	tipGroup = document.getElementById('tip-group');
	tipMask = document.getElementById('tip-mask')
	tipText = document.getElementById('tip-text')

	ready = 1;
}

function updateSVG(data)
{
	var path, i, e, r, x, y, cx, cy, nx, ny, t, p, total;

	mOut();
	
	total = 0;
	for (i = 0; i < 11; ++i)
		total += data[i] || 0;
	if (total == 0) return;

	r = 150;
	cx = cy = r + 5;
	t = 0;
	nx = cx;
	ny = cy + r;
	path = document.getElementsByTagName('path');
	
	for (i = 0; i < 11; ++i) {
		e = path.item(i);

		p = (data[i] || 0) / total;
		t += p;

		x = nx;
		y = ny;
		nx = cx + (r * Math.sin(t * Math.PI * 2));
		ny = cy + (r * Math.cos(t * Math.PI * 2));

		if (data[i] == 0) {
			e.setAttribute('d', '');
		}
		else if (p == 1) {
			e.setAttribute('d', 'M5,' + cy + 'A' + r + ',' + r + ' 0 1,1 5,' + (cy + 1) + 'z');
		}
		else {
			e.setAttribute('d', 'M' + cx + ',' + cy + 'L' + x + ',' + y + 'A' + r + ',' + r + ' 0 ' + ((p > 0.5) ? '1' : '0') + ',0 ' + nx + ',' + ny + 'Z');
		}
		
		tipInfo[i] = abc[i] + ' ' + (p * 100).toFixed(2) + '% (' + (data[i] || 0) + ')';

		e.setAttribute('onclick', 'mClick(' + i + ')');
		e.setAttribute('onmousemove', 'mMove(evt,' + i + ')');
		e.setAttribute('onmouseout', 'mOut()');
	}
}

function mClick(n)
{
	top.mClick(n);
}

function setText(e, text)
{
	if (e.firstChild) e.removeChild(e.firstChild);
	e.appendChild(document.createTextNode(text));
}

function showTip()
{
	setText(tipText, tipInfo[tipT]);
	
	tipMask.setAttribute('width', tipText.getComputedTextLength() + 10);
	
	if (tipY > (vHeight - 35)) tipY -= 20;
		else tipY += 20;
	if (tipX > (vWidth - 165)) tipX = vWidth - 170;
	tipGroup.setAttribute('transform', 'translate(' + tipX + ',' + tipY + ')');
	tipGroup.setAttribute('visibility', 'visible');

	tipLastN = tipT;

	clearTimeout(tipTimer);
	tipTimer = null;
}

function mMove(evt, n)
{
	if (n == tipLastN) return;
	tipT = n;
	tipX = evt.clientX;
	tipY = evt.clientY;
	setText(tipText, tipT + ' ' + tipX + 'x' + tipY );

	if (tipTimer) clearTimeout(tipTimer);
	tipTimer = setTimeout(showTip, 250);	// doesn't work properly under Adobe/IE
}

function mOut()
{
	if (tipLastN != -1) {
		tipLastN = -1;
		tipGroup.setAttribute('visibility', 'hidden');
	}
	if (tipTimer) {
		clearTimeout(tipTimer);
		tipTimer = null;
	}
}

]]></script>

<defs>
	<linearGradient id="lg0"><stop/><stop/></linearGradient>
	<linearGradient id="lg1"><stop/><stop/></linearGradient>
	<linearGradient id="lg2"><stop/><stop/></linearGradient>
	<linearGradient id="lg3"><stop/><stop/></linearGradient>
	<linearGradient id="lg4"><stop/><stop/></linearGradient>
	<linearGradient id="lg5"><stop/><stop/></linearGradient>
	<linearGradient id="lg6"><stop/><stop/></linearGradient>
	<linearGradient id="lg7"><stop/><stop/></linearGradient>
	<linearGradient id="lg8"><stop/><stop/></linearGradient>
	<linearGradient id="lg9"><stop/><stop/></linearGradient>
	<linearGradient id="lg10"><stop/><stop/></linearGradient>
</defs>


<g transform="rotate(135, 155, 155)">
	<path />
	<path />
	<path />
	<path />
	<path />
	<path />
	<path />
	<path />
	<path />
	<path />
	<path />
</g>

<g id="tip-group" visibility="hidden">
	<rect id="tip-mask" x="0" y="0" width="160" height="18" />
	<text id="tip-text" x="5" y="13">Unclassified 100.00% (9999)</text>
</g>
</svg>
